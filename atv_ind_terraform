provider "aws" {
  region = "us-east-1"
}

resource "aws_ami" "t2" {
  ami           = "ami-0c55b159cbfafe1f0"
  instance_type = "t2.micro"
  key_name      = "terraform.tfstate"
}

resource "aws_key_pair" "id_v_aws" {
  key_name = "ssh_key"
  public_key = file("~/.ssh/id_v_aws.pub")
}

resource "aws_security_group" "web_sg" {
  name = "web_sg"
  description = "Security group for web servers"
  ingress {
    from_port = 22
    to_port = 22
    protocol = "tcp"
    cidr_blocks = ["192.168.0.204/24"]
  }
  egress {
    from_port = 0
    to_port = 65535
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_security_group_regras" "web_sg_http" {
  type              = "ingress"
  from_port         = 80
  to_port           = 80
  protocol          = "tcp"
  cidr_blocks       = ["0.0.0.0/0"]
  security_group_id = aws_security_group.web_sg.id
}
  provisioner "remote-exec_1" {
    inline = [
      "sudo apt-get update",
      "sudo apt-get install -y nginx",
      "sudo systemctl start nginx"
    ]
  }

provisioner "remote-exec" {
  inline = [
    "sudo yum update -y",
    "sudo yum install -y httpd",
    "sudo service httpd start",
  ]

  connection {
    type     = "ssh"
    user     = "larissa-user"
    private_key = file(""~/.ssh/id_v_aws.pub")
  }

  depends_on = [aws_instance.example]
}

#Provisioner para poder copiar o arquivo index.html para a instância#

provisioner "local-exec" {
  command = "cat > index.html <<EOF<html> <body><h1>Olá, Terraform!</h1></body> </html>EOF"
}

#Provisioner "file" para copiar o arquivo index.html para a instância desejada#

provisioner "file" {
  source      = "index.html"
  destination = "/var/www/html/index.html"
  connection {
    type     = "ssh"
    user     = "larissa-user"
    private_key = file("~/.ssh/id_v_aws.pub")
    host     = self.public_ip
  }
}
